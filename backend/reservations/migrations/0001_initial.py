# Generated by Django 4.2.23 on 2025-09-01 10:43

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CheckEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tip",
                    models.CharField(
                        choices=[("check_in", "IN"), ("check_out", "OUT")],
                        max_length=10,
                    ),
                ),
                ("zaman", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Giriş/Çıkış Kaydı",
                "verbose_name_plural": "Giriş/Çıkış Kayıtları",
            },
        ),
        migrations.CreateModel(
            name="ParkingLot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ad", models.CharField(max_length=100)),
                (
                    "tip",
                    models.CharField(
                        choices=[
                            ("acik", "Açık"),
                            ("kapali", "Kapalı"),
                            ("vip", "VIP"),
                        ],
                        max_length=10,
                    ),
                ),
                ("konum", models.CharField(blank=True, max_length=200)),
                (
                    "kapasite",
                    models.PositiveIntegerField(
                        validators=[django.core.validators.MinValueValidator(1)]
                    ),
                ),
                ("aktif", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Otopark",
                "verbose_name_plural": "Otoparklar",
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("plaka", models.CharField(db_index=True, max_length=15)),
                ("baslangic", models.DateTimeField(db_index=True)),
                ("bitis", models.DateTimeField(db_index=True)),
                (
                    "durum",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("confirmed", "Confirmed"),
                            ("checked_in", "CheckedIn"),
                            ("checked_out", "CheckedOut"),
                            ("canceled", "Canceled"),
                        ],
                        db_index=True,
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("qr_token", models.CharField(blank=True, max_length=64, unique=True)),
                (
                    "ucret_hesap",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="reservations",
                        to="reservations.parkinglot",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Rezervasyon",
                "verbose_name_plural": "Rezervasyonlar",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RatePlan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ad", models.CharField(default="Standart", max_length=50)),
                (
                    "saatlik_ucret",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "gunluk_tavan",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "lot",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rateplans",
                        to="reservations.parkinglot",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tarife",
                "verbose_name_plural": "Tarifeler",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tutar",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0"))
                        ],
                    ),
                ),
                (
                    "saglayici",
                    models.CharField(
                        choices=[
                            ("mock", "Mock"),
                            ("iyzico", "iyzico"),
                            ("stripe", "Stripe"),
                        ],
                        default="mock",
                        max_length=10,
                    ),
                ),
                (
                    "durum",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("paid", "Paid"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("odeme_ref", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "reservation",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment",
                        to="reservations.reservation",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ödeme",
                "verbose_name_plural": "Ödemeler",
            },
        ),
        migrations.AddIndex(
            model_name="parkinglot",
            index=models.Index(
                fields=["aktif", "tip"], name="reservation_aktif_976b2a_idx"
            ),
        ),
        migrations.AddField(
            model_name="checkevent",
            name="gorevli",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="check_events",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="checkevent",
            name="reservation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="checks",
                to="reservations.reservation",
            ),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["lot", "baslangic", "bitis"],
                name="reservation_lot_id_974fac_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(fields=["durum"], name="reservation_durum_a88a87_idx"),
        ),
        migrations.AddIndex(
            model_name="reservation",
            index=models.Index(
                fields=["qr_token"], name="reservation_qr_toke_b9de3e_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="rateplan",
            unique_together={("lot", "ad")},
        ),
    ]
